version: '2'

services:
  nginx:
    build: ./containers/nginx
    ports:
      - 80:80
    volumes:
      - /etc/localtime:/etc/localtime/:ro
      - ./logs:/var/log/nginx
      - ./src/front/dist:/app
    command: nginx -g "daemon off;"
    restart: always

  back:
    build: ./src/back
    volumes:
      - ./src/back:/app
      - ./src/back/node_modules:/node_modules
      - ./logs/back:/var/log/node
    environment:
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
    restart: always

  backup:
    build: ./src/backup-runner/
    volumes:
      - ./src/backup:/app/service
      - ./src/backup-runner/:/app/runner
      - ./logs:/var/log/php
      - /mnt/b/backup:/mnt/b/backup
    environment:
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
    restart: always

  mongo:
    image: mongo:3-stretch
    container_name: ${MONGODB_CONTAINER_NAME}
    ports:
      - 27017:27017
    volumes:
      - ./data/mongo:/data/db
      - ./data/backup/mongo:/backup
    restart: always
    entrypoint:
      mongod --bind_ip_all

  rabbitmq:
    image: rabbitmq:3-management
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    restart: always
